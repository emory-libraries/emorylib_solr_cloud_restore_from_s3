---
- name: List existing collections
  uri:
    url: '{{ solr_cloud_restore_base_url }}/collections?'
    body: 'action=LIST'
    method: POST
  register: collections_info

- name: Set list of collections
  set_fact:
    existing_collections: '{{ collections_info | json_query("json.collections[]") }}'

- name: Set matching collections
  set_fact:
    check_if_collection_already_exists: '{{ existing_collections | select("match", solr_cloud_restore.collection.name) | list | last | d ("none") }}'
    matching_collections: '{{ solr_cloud_restore.collection.delete_all_matching is defined | ternary (match_collections, []) }}'
  vars:
    match_collections: '{{ existing_collections | select("contains", solr_cloud_restore.collection.delete_all_matching) | list }}'
  
- debug:
    var: item
  loop: [check_if_collection_already_exists, matching_collections]

- pause:

- name: Get list of restore collections that already exists
  set_fact:
    existing_collections: '{{ pre_existing_collections | intersect (collection_names) }}'
  vars:
    pre_existing_collections:  '{{ collections_info | json_query(query) }}'
    collection_names: '{{ sc_restore_list | json_query(query2) }}'
    query: 'json.collections[]'
    query2: '[].collection_name'

- name: Fail if collections exists and delete collection is set to no
  fail:
    msg: 'Collection(s) already exists for {{ existing_collections }} and sc_restore_delete_collection has been set to no, please set this variable to yes to proceed with restore'
  when:
    - not sc_restore_delete_collection
    - existing_collections | length > 0