---
- name: List objects in s3
  aws_s3:
    bucket: '{{ item.bucket_name | d (sc_restore_bucket) }}'
    prefix: '{{ item.bucket_prefix | d (sc_restore_bucket_prefix) | d (omit) }}'
    mode: list
  loop: '{{ sc_restore_list }}'
  register: s3_objects

- name: Create new restore_list with associated object list
  set_fact:
    __sc_restore_list: '{{ __sc_restore_list | d([]) + [item.0 | combine({"s3_keys": item.1.s3_keys | d () })] }}'
  loop: '{{ sc_restore_list | zip(s3_objects.results) | list }}'

- name: Fail task if no keys were found
  fail:
    msg: 'No keys were found at {{ item.bucket_prefix | d (sc_restore_bucket_prefix) }} for {{ item.restore_name }}!'
  loop: '{{ __sc_restore_list }}'
  when: item.s3_keys | length == 0

- pause:

- name: Fail task if given epoch is not found
  fail:
    msg: 'No key matching'
  
- debug:
    var: __sc_restore_list

- name: Get combined unique list of objects
  set_fact:
    combined_object_list: '{{ s3_objects | json_query("results[].s3_keys[]") | list | unique }}'

- name: Get latest object
  set_fact:
    latest_backup_list: '{{ combined_object_list | select("search", search_query) | d (False) | list }}'
  loop: '{{ sc_restore_list }}'
  when: item.restore_epoch | lower == 'latest' 
  vars:
    search_query: '*{{ item.restore_name }}*'

- debug:
    var: sc_restore_list | length

- pause:
